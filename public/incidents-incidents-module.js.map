{"version":3,"sources":["./src/app/incidents/dashboard/dashboard.component.ts","./src/app/incidents/dashboard/dashboard.component.html","./src/app/incidents/incidents.module.ts","./src/app/incidents/incidents.component.ts","./src/app/incidents/incidents.component.html","./src/app/incidents/addedit/incident-addedit.component.ts","./src/app/incidents/addedit/incident-addedit.component.html","./src/app/model/incident.model.ts","./src/app/incidents/incidents.service.ts"],"names":[],"mappings":"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","file":"incidents-incidents-module.js","sourcesContent":["import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {Incident} from '../../model/incident.model';\nimport {RestDataSource} from '../../model/rest.datasource';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, AfterViewInit {\n\n  incidents: Incident[] = [];\n  showAllIncidents = false;\n\n  public booksPerPage = 4;\n  public selectedPage = 1;\n\n  constructor(\n    // private repository: IncidentRepository,\n    private dataSource: RestDataSource\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.loadData();\n  }\n\n  loadData(): void {\n    this.dataSource.getIncidents().subscribe(\n      (data) => {\n        this.incidents = data;\n      }, (error => {\n        console.log(error);\n      }));\n  }\n\n  // get incidents(): Incident[]\n  // {\n  //   const pageIndex = (this.selectedPage - 1) * this.booksPerPage;\n  //   const i = this.repository.getIncidents()\n  //     .slice(pageIndex, pageIndex + this.booksPerPage);\n  //\n  //   return i;\n  // }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"d-flex justify-content-end\">\n    <div class=\"form-check\">\n      <input class=\"form-check-input\" type=\"checkbox\" id=\"showAllIncidents\" [(ngModel)]=\"showAllIncidents\">\n      <label class=\"form-check-label\" for=\"showAllIncidents\">\n        Show All incidents\n      </label>\n    </div>\n\n    <button class='btn btn-secondary m-1' routerLink='/incidents/add'>\n      <i class=\"fas fa-plus\"></i>\n    </button>\n<!--    <a routerLink='/incidents/add'>-->\n<!--      <i class=\"fas fa-plus\"></i>-->\n<!--    </a>-->\n  </div>\n  <div class=\"d-flex\">\n    <div class=\"col-9 p-2\">\n      <div *ngFor='let incident of incidents'>\n        <ng-container *ngIf=\"showAllIncidents || (incident.status !== 'closed')\">\n          <div class=\"card m-1 p-1 bg-light\">\n            <div class=\"d-flex justify-content-between\">\n              <div>\n                <span class=\"label\">ID</span><span class=\"ml-2\">{{incident.uid}}</span>\n                <span class=\"label ml-4\">Updated At</span><span class=\"ml-2\">{{incident.updatedAt | date : 'fullDate'}}</span>\n              </div>\n    <!--          <button class='btn btn-secondary' [routerLink]=\"'/incidents/edit/' + incident._id\" [state]=\"{incident: incident}\">-->\n    <!--            <i class=\"fas fa-edit\"></i>-->\n    <!--          </button>-->\n              <a *ngIf=\"incident.status !== 'closed'\" [routerLink]=\"'/incidents/edit/' + incident.id\" [state]=\"{incident: incident}\">\n                <i class=\"fas fa-edit\"></i>\n              </a>\n            </div>\n\n            <div class=\"d-flex\">\n              <div><span class=\"label\">Name</span><span class=\"ml-2\">{{incident.customerInfo.displayName}}</span></div>\n              <div><span class=\"label ml-2\">Email</span><span class=\"ml-2\">{{incident.customerInfo.email}}</span></div>\n            </div>\n\n            <div class=\"d-flex\">\n              <div><span class=\"label\">Status</span><span class=\"ml-2\">{{incident.status}}</span></div>\n              <div><span class=\"label ml-2\">Priority</span><span class=\"ml-2\">{{incident.priority}}</span></div>\n            </div>\n            <div class=\"d-flex flex-column\">\n              <div class=\"label\">Description</div>\n              <div>{{incident.description}}</div>\n            </div>\n\n            <div class=\"d-flex flex-column\">\n              <div class=\"label\">Narrative</div>\n              <div>{{incident.narrative}}</div>\n            </div>\n\n            <div class=\"d-flex flex-column\" *ngIf=\"incident.status === 'closed'\">\n              <div class=\"label\">Resolution</div>\n              <div>{{incident.narrative}}</div>\n            </div>\n\n          </div>\n        </ng-container>\n      </div>\n\n<!--      <div class=\"form-inline float-left mr-1\">-->\n<!--        <select class=\"form-control\" [value]='booksPerPage'-->\n<!--                (change)='changePageSize($event.target.value)'>-->\n<!--          <option value=\"3\">3 per Page</option>-->\n<!--          <option value=\"4\">4 per Page</option>-->\n<!--          <option value=\"6\">6 per Page</option>-->\n<!--          <option value=\"8\">8 per Page</option>-->\n<!--        </select>-->\n<!--      </div>-->\n\n<!--      <div class=\"btn-group float-right\">-->\n<!--        <button *counter='let page of pageCount' (click)='changePage(page)'-->\n<!--                class=\"btn btn-outline-primary\"-->\n<!--                [class.active]='page == selectedPage'>-->\n<!--          {{ page }}-->\n<!--        </button>-->\n<!--      </div>-->\n\n    </div>\n\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {IncidentsComponent} from './incidents.component';\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {IncidentAddEditComponent} from './addedit/incident-addedit.component';\r\nimport {AuthGuard} from '../auth/auth.guard';\r\n\r\nconst routing = RouterModule.forChild([\r\n  // { path: 'auth', component: AuthComponent },\r\n  // // { path: 'main', component: AuthComponent, canActivate: [AuthGuard]\r\n  // //  children: [\r\n  // //     { path: 'books/:mode/:id', component: BookEditorComponent, data: {title: 'Edit Book'}, canActivate: [AuthGuard]},\r\n  // //     { path: 'books/:mode', component: BookEditorComponent, data: {title: 'Add Book'}, canActivate: [AuthGuard]},\r\n  // //     { path: 'books', component: BookTableComponent, data: {title: 'Book Table'}, canActivate: [AuthGuard]},\r\n  // //     { path: 'orders', component: OrderTableComponent, data: {title: 'Order Table'}, canActivate: [AuthGuard]},\r\n  // //     { path: '**', redirectTo: 'book-list' }]\r\n  // // },\r\n  // { path: '**', redirectTo: 'auth' },\r\n  {\r\n    path: '',\r\n    component: IncidentsComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: DashboardComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: ':mode',  // add\r\n        component: IncidentAddEditComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: ':mode/:id',  // edit\r\n        component: IncidentAddEditComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      {\r\n        path: '**',\r\n        redirectTo: '/auth/login',\r\n        pathMatch: 'full',\r\n      },\r\n    ]\r\n  }\r\n]);\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, routing],\r\n  providers: [AuthGuard],\r\n  declarations: [IncidentsComponent, DashboardComponent, IncidentAddEditComponent]\r\n})\r\nexport class IncidentsModule {}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  templateUrl: './incidents.component.html'\r\n})\r\nexport class IncidentsComponent\r\n{\r\n    constructor(private auth: AuthService,\r\n                private router: Router) {}\r\n\r\n    logout(): void\r\n    {\r\n      this.auth.logout();\r\n\r\n      this.router.navigateByUrl('/');\r\n    }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {Location} from '@angular/common';\nimport {User} from '../../model/user.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthService} from '../../auth/auth.service';\nimport {Incident} from '../../model/incident.model';\nimport {IncidentsService} from '../incidents.service';\n\nexport enum FormMode {\n  EDIT = 'edit',\n  ADD = 'add'\n}\n\n@Component({\n  selector: 'app-incident-addedit',\n  templateUrl: './incident-addedit.component.html',\n  styleUrls: ['./incident-addedit.component.css']\n})\nexport class IncidentAddEditComponent implements OnInit {\n  FormMode = FormMode;\n\n  public mode: string;  // add or edit\n  public id: string;\n  public state: any;\n  public user: User;\n  public errorMessage: string;\n  public incident: Incident;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private location: Location,\n    private authService: AuthService,\n    private incidentsService: IncidentsService\n  ) { }\n\n  ngOnInit(): void {\n    this.user = this.authService.getUser();\n    this.mode = this.activatedRoute.snapshot.paramMap.get('mode');\n    this.id = this.activatedRoute.snapshot.paramMap.get('id');\n    this.state = this.location.getState();\n\n    if (this.mode === FormMode.ADD) {\n      this.incident = new Incident();\n\n      const now = new Date();\n      this.incident.uid = `${now.getDay()}${now.getMonth()}${now.getFullYear()}-${now.getHours()}${now.getMinutes()}${now.getSeconds()}`;\n      this.incident.status = 'new';\n      this.incident.priority = 'prio1';\n\n      this.incident.customerInfo = {\n        displayName: this.user.displayName,\n        email: this.user.email\n      };\n    } else {\n      this.incident = this.state.incident;\n    }\n  }\n\n  submit(form: NgForm): void {\n    if (form.valid)\n    {\n      // perform authentication\n      if (this.mode === FormMode.ADD) {\n        this.incidentsService.create(this.incident).subscribe(\n          data => {\n            if (data.success) {\n              this.router.navigateByUrl('/incidents');\n            } else {\n              this.errorMessage = 'Invalid registration. Please try again.';\n            }\n          },\n          error => {\n            this.errorMessage = 'Invalid registration. Please try again.';\n          }\n        );\n      } else {\n        this.incidentsService.update(this.incident).subscribe(\n          data => {\n            if (data.success) {\n              this.router.navigateByUrl('/incidents');\n            } else {\n              this.errorMessage = 'Invalid registration. Please try again.';\n            }\n          },\n          error => {\n            this.errorMessage = 'Invalid registration. Please try again.';\n          }\n        );\n      }\n    }\n    else\n    {\n      this.errorMessage = 'Form Data Invalid';\n    }\n\n  }\n\n}\n\n","<main class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3 col-lg-6 offset-lg-3 col-sm-8 offset-sm-1\">\n      <div class=\"bg-danger mt-2 p-2 text-center text-white\"\n           *ngIf='errorMessage != null'>\n        {{ errorMessage }}\n      </div>\n      <h1 *ngIf=\"mode === FormMode.ADD\">Add Incident</h1>\n      <h1 *ngIf=\"mode === FormMode.EDIT\">Edit Incident</h1>\n\n      <form autocomplete='off' #form='ngForm' (ngSubmit)='submit(form)'>\n        <div class=\"d-flex\">\n          <div class=\"label\">Id:</div>\n          <div id=\"uid\" class=\"ml-2\">{{incident.uid}}</div>\n        </div>\n        <div class=\"d-flex\">\n          <div class=\"label\">Updated At: </div><div class=\"ml-2\">{{incident.updatedAt | date : 'fullDate'}}</div>\n        </div>\n\n        <div class=\"d-flex\">\n          <div class=\"label\">Customer:</div>\n          <div class=\"ml-2\">Name: {{incident.customerInfo.displayName}}, Email {{incident.customerInfo.email}}</div>\n        </div>\n        <div class=\"d-flex\">\n          <div class=\"label\">Status:</div>\n          <div class=\"ml-2\" *ngIf=\"mode === FormMode.ADD\">{{incident.status}}</div>\n          <fieldset class=\"form-group ml-2\" *ngIf=\"mode === FormMode.EDIT\">\n            <div class=\"form-check form-check-inline\">\n              <input class=\"form-check-input\" type=\"radio\" name=\"status\" id=\"statusNew\" value=\"new\" [(ngModel)]='incident.status' checked>\n              <label class=\"form-check-label\" for=\"statusNew\">\n                New\n              </label>\n            </div>\n            <div class=\"form-check form-check-inline\">\n              <input class=\"form-check-input\" type=\"radio\" name=\"status\" id=\"statusProgress\" value=\"inProgress\" [(ngModel)]='incident.status'>\n              <label class=\"form-check-label\" for=\"statusProgress\">\n                In Progress\n              </label>\n            </div>\n            <div class=\"form-check form-check-inline\">\n              <input class=\"form-check-input\" type=\"radio\" name=\"status\" id=\"statusDispatched\" value=\"dispatched\" [(ngModel)]='incident.status'>\n              <label class=\"form-check-label\" for=\"statusDispatched\">\n                Dispatched\n              </label>\n            </div>\n            <div class=\"form-check form-check-inline\">\n              <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"statusClosed\" value=\"closed\" [(ngModel)]='incident.status'>\n              <label class=\"form-check-label\" for=\"statusClosed\">\n                Closed\n              </label>\n            </div>\n          </fieldset>\n        </div>\n\n        <div class=\"d-flex\">\n          <div class=\"label\">Priority:</div>\n          <div class=\"ml-2\" *ngIf=\"mode === FormMode.EDIT\">{{incident.priority}}</div>\n          <fieldset class=\"form-group ml-2\" *ngIf=\"mode === FormMode.ADD\">\n            <div class=\"form-check form-check-inline\">\n              <input class=\"form-check-input\" type=\"radio\" name=\"priority\" id=\"priority1\" value=\"prio1\" [(ngModel)]='incident.priority' checked>\n              <label class=\"form-check-label\" for=\"priority1\">\n                Prio 1\n              </label>\n            </div>\n            <div class=\"form-check form-check-inline\">\n              <input class=\"form-check-input\" type=\"radio\" name=\"priority\" id=\"priority2\" value=\"prio2\" [(ngModel)]='incident.priority'>\n              <label class=\"form-check-label\" for=\"priority2\">\n                Prio 2\n              </label>\n            </div>\n            <div class=\"form-check form-check-inline\">\n              <input class=\"form-check-input\" type=\"radio\" name=\"priority\" id=\"priority3\" value=\"prio3\" [(ngModel)]='incident.priority'>\n              <label class=\"form-check-label\" for=\"priority3\">\n                Prio 3\n              </label>\n            </div>\n          </fieldset>\n        </div>\n\n        <fieldset class=\"form-group\">\n          <label for=\"description\" class=\"label\">Description: <span class=\"required\">*</span></label>\n          <textarea class=\"form-control\"\n                 [(ngModel)]='incident.description'\n                 name='description' placeholder='Enter description'\n                id='description' required autofocus autocomplete='off' [disabled]=\"mode === FormMode.EDIT\"></textarea>\n        </fieldset>\n\n        <fieldset class=\"form-group\">\n          <label for=\"narrative\" class=\"label\">Narrative: <span class=\"required\">*</span></label>\n          <textarea class=\"form-control\"\n                    [(ngModel)]='incident.narrative'\n                    name='narrative' placeholder='Enter narrative'\n                    id='narrative' required autofocus autocomplete='off'></textarea>\n        </fieldset>\n\n        <fieldset class=\"form-group\" *ngIf=\"incident.status === 'closed'\">\n          <label for=\"resolution\" class=\"label\">Resolution: <span class=\"required\">*</span></label>\n          <textarea class=\"form-control\"\n                    [(ngModel)]='incident.resolution'\n                    name='resolution' placeholder='Enter resolution'\n                    id='resolution' required autofocus autocomplete='off'></textarea>\n        </fieldset>\n\n        <fieldset class=\"form-group text-right\">\n          <button class='btn btn-primary m-1' type='submit' [disabled]=\"!form.valid\">\n            <i class=\"fas fa-sign-in-alt\"></i>\n            Submit\n          </button>\n          <button class='btn btn-secondary m-1' routerLink='/incidents'>\n            <i class=\"fas fa-undo\"></i>\n            Cancel\n          </button>\n        </fieldset>\n\n      </form>\n    </div>\n  </div>\n</main>\n","export class Incident\r\n{\r\n  constructor(\r\n    // tslint:disable-next-line: variable-name\r\n    public id?: number,\r\n    public uid?: string,\r\n    public status?: string,\r\n    public description?: string,\r\n    public priority?: string,\r\n    public customerInfo?: {displayName: string, email: string},\r\n    public narrative?: string,\r\n    public resolution?: string,\r\n    public createdAt?: Date,\r\n    public updatedAt?: Date\r\n  ){}\r\n\r\n  public toString(): string\r\n  {\r\n    return `\r\n    Incident\r\n    -------------------------------\r\n    Uid        : ${this.uid}\r\n    Description: ${this.description}\r\n    Priority   : ${this.priority}\r\n    CustInfo   : ${this.customerInfo.displayName} ${this.customerInfo.email}\r\n    Narrative   : ${this.narrative}\r\n    Resolution  : ${this.resolution}\r\n    -------------------------------\r\n    `;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestDataSource } from '../model/rest.datasource';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\nimport {Incident} from '../model/incident.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class IncidentsService\r\n{\r\n  constructor(private datasource: RestDataSource)\r\n  {\r\n  }\r\n\r\n  create(incident: Incident): Observable<any>\r\n  {\r\n    return this.datasource.createIncident(incident);\r\n  }\r\n  update(incident: Incident): Observable<any>\r\n  {\r\n    return this.datasource.updateIncident(incident);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}