{"version":3,"sources":["./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/editProfile/edit-profile.component.ts","./src/app/auth/editProfile/edit-profile.component.html","./src/app/auth/auth.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n  templateUrl: './auth.component.html'\r\n})\r\nexport class AuthComponent\r\n{\r\n    constructor(private auth: AuthService,\r\n                private router: Router) {}\r\n\r\n    logout(): void\r\n    {\r\n      this.auth.logout();\r\n\r\n      this.router.navigateByUrl('/');\r\n    }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {User} from '../../model/user.model';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n  public user: User;\n  public errorMessage: string;\n\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.user = this.authService.getUser();\n  }\n\n  submit(form: NgForm): void {\n    if (form.valid)\n    {\n      // perform authentication\n      this.authService.update(this.user).subscribe(\n        data => {\n          if (data.success)\n          {\n            this.authService.storeUserData(null, data.user); // no token returned\n            this.router.navigateByUrl('/incidents');\n          } else {\n            this.errorMessage = 'Invalid authentication. Please try again.';\n          }\n        },\n        error => {\n          this.errorMessage = 'Invalid authentication. Please try again.';\n        }\n      );\n    }\n    else\n    {\n      this.errorMessage = 'Form Data Invalid';\n    }\n\n  }\n\n}\n","<main class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3 col-lg-6 offset-lg-3 col-sm-8 offset-sm-1\">\n      <div class=\"bg-danger mt-2 p-2 text-center text-white\"\n           *ngIf='errorMessage != null'>\n        {{ errorMessage }}\n      </div>\n      <h1>Edit Profile</h1>\n      <form autocomplete='off' #form='ngForm' (ngSubmit)='submit(form)'>\n\n        <div class=\"d-flex\">\n          <div class=\"label\">Username:</div>\n          <div class=\"ml-2\">{{user.username}}</div>\n        </div>\n\n<!--        <fieldset class=\"form-group\">-->\n<!--          <label for=\"username\">Username:</label>-->\n<!--          <input type=\"text\" class=\"form-control\"-->\n<!--                 [(ngModel)]='user.username'-->\n<!--                 name='username' placeholder='Enter Username'-->\n<!--                 id='username' required autofocus autocomplete='off'>-->\n<!--        </fieldset>-->\n\n<!--        <fieldset class=\"form-group\">-->\n<!--          <label for=\"password\">Password:</label>-->\n<!--          <input type=\"password\" class=\"form-control\"-->\n<!--                 [(ngModel)]='user.password'-->\n<!--                 name='password' placeholder='Enter Password'-->\n<!--                 id='password' required autocomplete='off'>-->\n<!--        </fieldset>-->\n\n        <fieldset class=\"form-group\">\n          <label for=\"displayName\">Display Name: <span class=\"required\">*</span></label>\n          <input type=\"text\" class=\"form-control\"\n                 [(ngModel)]='user.displayName'\n                 name='displayName' placeholder='Enter Display Name'\n                 id='displayName' required autofocus autocomplete='off'>\n        </fieldset>\n\n        <fieldset class=\"form-group\">\n          <label for=\"email\">Email: <span class=\"required\">*</span></label>\n          <input type=\"email\" class=\"form-control\"\n                 [(ngModel)]='user.email'\n                 name='password' placeholder='Enter Email'\n                 id='email' required autocomplete='off'>\n        </fieldset>\n\n        <fieldset class=\"form-group text-right\">\n          <button class='btn btn-primary m-1' type='submit' [disabled]=\"!form.valid\">\n            <i class=\"fas fa-sign-in-alt\"></i>\n            Submit\n          </button>\n          <button class='btn btn-secondary m-1' routerLink='/home'>\n            <i class=\"fas fa-undo\"></i>\n            Cancel\n          </button>\n        </fieldset>\n\n      </form>\n    </div>\n  </div>\n</main>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {AuthComponent} from './auth.component';\r\nimport {AuthGuard} from './auth.guard';\r\nimport {LoginComponent} from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport {EditProfileComponent} from './editProfile/edit-profile.component';\r\n// import { AuthComponent } from './auth/auth.component';\r\n// import { AuthGuard } from './auth/auth.guard';\r\n// import { AuthComponent } from './admin.component';\r\n// import { OrderTableComponent } from './order-table/order-table.component';\r\n// import { BookEditorComponent } from './book-editor/book-editor.component';\r\n// import { BookTableComponent } from './book-table/book-table.component';\r\n\r\nconst routing = RouterModule.forChild([\r\n  // { path: 'auth', component: AuthComponent },\r\n  // // { path: 'main', component: AuthComponent, canActivate: [AuthGuard]\r\n  // //  children: [\r\n  // //     { path: 'books/:mode/:id', component: BookEditorComponent, data: {title: 'Edit Book'}, canActivate: [AuthGuard]},\r\n  // //     { path: 'books/:mode', component: BookEditorComponent, data: {title: 'Add Book'}, canActivate: [AuthGuard]},\r\n  // //     { path: 'books', component: BookTableComponent, data: {title: 'Book Table'}, canActivate: [AuthGuard]},\r\n  // //     { path: 'orders', component: OrderTableComponent, data: {title: 'Order Table'}, canActivate: [AuthGuard]},\r\n  // //     { path: '**', redirectTo: 'book-list' }]\r\n  // // },\r\n  // { path: '**', redirectTo: 'auth' },\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: RegisterComponent,\r\n      },\r\n      // {\r\n      //   path: 'logout',\r\n      //   component: LogoutComponent,\r\n      // },\r\n      {\r\n        path: 'edit-profile',\r\n        component: EditProfileComponent,\r\n      },\r\n      {\r\n        path: '',\r\n        redirectTo: 'login',\r\n        pathMatch: 'full',\r\n      },\r\n    ]\r\n  }\r\n]);\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, routing],\r\n  providers: [AuthGuard],\r\n  declarations: [AuthComponent, LoginComponent, RegisterComponent, EditProfileComponent]\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {User} from '../../model/user.model';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  public user: User;\n  public errorMessage: string;\n\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.user = new User();\n  }\n  register(form: NgForm): void {\n    if (form.valid)\n    {\n      // perform authentication\n      this.authService.register(this.user).subscribe(\n        data => {\n          if (data.success)\n          {\n            this.authService.storeUserData(data.token, data.user);\n            this.router.navigateByUrl('/auth/login');\n          } else {\n            this.errorMessage = 'Invalid registration. Please try again.';\n          }\n        },\n        error => {\n          if (error.error.error.errorCode === 1 ) {\n            this.errorMessage = 'User already exists. Please select different username.';\n          } else {\n            this.errorMessage = 'Invalid registration. Please try again.';\n          }\n        }\n      );\n    }\n    else\n    {\n      this.errorMessage = 'Form Data Invalid';\n    }\n\n  }\n\n}\n","<main class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3 col-lg-6 offset-lg-3 col-sm-8 offset-sm-1\">\n      <div class=\"bg-danger mt-2 p-2 text-center text-white\"\n           *ngIf='errorMessage != null'>\n        {{ errorMessage }}\n      </div>\n      <h1>Please Register</h1>\n      <form autocomplete='off' #form='ngForm' (ngSubmit)='register(form)'>\n\n        <fieldset class=\"form-group\">\n          <label for=\"username\">Username: <span class=\"required\">*</span></label>\n          <input type=\"text\" class=\"form-control\"\n                 [(ngModel)]='user.username'\n                 name='username' placeholder='Enter Username'\n                 id='username' required autofocus autocomplete='off'>\n        </fieldset>\n\n        <fieldset class=\"form-group\">\n          <label for=\"password\">Password: <span class=\"required\">*</span></label>\n          <input type=\"password\" class=\"form-control\"\n                 [(ngModel)]='user.password'\n                 name='password' placeholder='Enter Password'\n                 id='password' required autocomplete='off'>\n        </fieldset>\n\n        <fieldset class=\"form-group\">\n          <label for=\"displayName\">Display Name: <span class=\"required\">*</span></label>\n          <input type=\"text\" class=\"form-control\"\n                 [(ngModel)]='user.displayName'\n                 name='displayName' placeholder='Enter Display Name'\n                 id='displayName' required autofocus autocomplete='off'>\n        </fieldset>\n\n        <fieldset class=\"form-group\">\n          <label for=\"email\">Email: <span class=\"required\">*</span></label>\n          <input type=\"email\" class=\"form-control\"\n                 [(ngModel)]='user.email'\n                 name='password' placeholder='Enter Email'\n                 id='email' required autocomplete='off'>\n        </fieldset>\n\n        <fieldset class=\"form-group text-right\">\n          <button class='btn btn-primary m-1' type='submit' [disabled]=\"!form.valid\">\n            <i class=\"fas fa-sign-in-alt\"></i>\n            Register\n          </button>\n          <button class='btn btn-secondary m-1' routerLink='/home'>\n            <i class=\"fas fa-undo\"></i>\n            Cancel\n          </button>\n        </fieldset>\n\n      </form>\n    </div>\n  </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\nimport { User } from '../../model/user.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit\n{\n  public user: User;\n  public errorMessage: string;\n\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.user = new User();\n  }\n\n  authenticate(form: NgForm): void {\n    if (form.valid)\n    {\n      // perform authentication\n      this.authService.authenticate(this.user).subscribe(\n        data => {\n          if (data.success)\n          {\n            this.authService.storeUserData(data.token, data.user);\n            this.router.navigateByUrl('/incidents');\n          } else {\n            this.errorMessage = 'Invalid login. Please try again.';\n          }\n        },\n        error => {\n            this.errorMessage = 'Invalid login. Please try again.';\n        }\n      );\n    }\n    else\n    {\n      this.errorMessage = 'Form Data Invalid';\n    }\n  }\n\n}\n","<!--<div class=\"bg-info p-2 text-center text-white\">-->\n<!--  <h3>BookStore Admin</h3>-->\n<!--</div>-->\n\n<main class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3 col-lg-6 offset-lg-3 col-sm-8 offset-sm-1\">\n      <div class=\"bg-danger mt-2 p-2 text-center text-white\"\n        *ngIf='errorMessage != null'>\n        {{ errorMessage }}\n      </div>\n      <h1>Please Login</h1>\n      <form autocomplete='off' #form='ngForm' (ngSubmit)='authenticate(form)'>\n\n      <fieldset class=\"form-group\">\n        <label for=\"username\">Username: <span class=\"required\">*</span></label>\n        <input type=\"text\" class=\"form-control\"\n        [(ngModel)]='user.username'\n        name='username' placeholder='Enter Username'\n        id='username' required autofocus autocomplete='off'>\n      </fieldset>\n\n      <fieldset class=\"form-group\">\n        <label for=\"password\">Password: <span class=\"required\">*</span></label>\n        <input type=\"password\" class=\"form-control\"\n        [(ngModel)]='user.password'\n        name='password' placeholder='Enter Password'\n        id='password' required autocomplete='off'>\n      </fieldset>\n\n      <fieldset class=\"form-group text-right\">\n        <button class='btn btn-primary m-1' type='submit' [disabled]=\"!form.valid\">\n          <i class=\"fas fa-sign-in-alt\"></i>\n          Log In\n        </button>\n        <button class='btn btn-secondary m-1' routerLink='/home'>\n          <i class=\"fas fa-undo\"></i>\n          Cancel\n        </button>\n      </fieldset>\n\n    </form>\n    </div>\n  </div>\n</main>\n"],"sourceRoot":"webpack:///"}